components:
  schemas:
    SysUserDTO:
      type: object
      properties:
        username: {type: string}
        password: {type: string}
        realName: {type: string}
        email: {type: string}
        mobile: {type: string}
        status: {type: integer}
        deptId: {type: integer}
    SysUserVO:
      type: object
      properties:
        id: {type: integer, format: int64}
        username: {type: string}
        realName: {type: string}
        email: {type: string}
        mobile: {type: string}
        status: {type: integer}
        deptName: {type: string}
        createTime: {type: string, format: date-time}

paths:
  /api/users:
    get:
      summary: 获取用户列表（分页）
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/R'
    post:
      summary: 新增用户
  /api/users/{id}:
    get:
      summary: 获取单个用户
    put:
      summary: 更新用户
    delete:
      summary: 删除用户
components:
  schemas:
    SysDeptDTO:
      type: object
      required: [name]
      properties:
        name: {type: string}
        parentId: {type: integer, format: int64}
        orderNum: {type: integer}
        status: {type: integer}
    SysDeptVO:
      type: object
      properties:
        id: {type: integer, format: int64}
        name: {type: string}
        parentId: {type: integer, format: int64}
        orderNum: {type: integer}
        status: {type: integer}
        createTime: {type: string, format: date-time}
        updateTime: {type: string, format: date-time}

paths:
  /api/depts:
    get:
      summary: 分页获取部门列表
      parameters:
        - name: page; in: query; schema: {type: integer}; required: false
        - name: size; in: query; schema: {type: integer}; required: false
      responses:
        "200": {description: OK}
    post:
      summary: 新增部门
      requestBody:
        content:
          application/json:
            schema: { $ref: '#/components/schemas/SysDeptDTO' }
      responses:
        "200": {description: OK}
  /api/depts/{id}:
    get:
      summary: 根据 ID 查询部门
      parameters:
        - name: id; in: path; schema: {type: integer, format: int64}; required: true
      responses:
        "200": {description: OK}
    put:
      summary: 更新部门
      parameters:
        - name: id; in: path; required: true; schema: {type: integer}
      requestBody:
        content:
          application/json:
            schema: { $ref: '#/components/schemas/SysDeptDTO' }
      responses:
        "200": {description: OK}
    delete:
      summary: 删除部门
      parameters:
        - name: id; in: path; schema: {type: integer}; required: true
      responses:
        "200": {description: OK}
components:
  schemas:
    SysPostDTO:
      type: object
      required:
        - name
        - code
      properties:
        name:
          type: string
        code:
          type: string
        description:
          type: string
        status:
          type: integer
    SysPostVO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        code:
          type: string
        description:
          type: string
        status:
          type: integer
        createTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time

paths:
  /api/posts:
    get:
      summary: 分页查询岗位
      parameters:
        - name: page
          in: query
          schema:
            type: integer
        - name: size
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: OK
    post:
      summary: 新增岗位
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SysPostDTO'
      responses:
        "200":
          description: OK
  /api/posts/{id}:
    get:
      summary: 根据 ID 查询岗位
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
    put:
      summary: 更新岗位
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SysPostDTO'
      responses:
        "200":
          description: OK
    delete:
      summary: 删除岗位
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
components:
  schemas:
    SysRoleDTO:
      type: object
      required: [name, code]
      properties:
        name: { type: string }
        code: { type: string }
        status: { type: integer }
    SysRoleVO:
      type: object
      properties:
        id: { type: integer, format: int64 }
        name: { type: string }
        code: { type: string }
        status: { type: integer }
        createTime: { type: string, format: date-time }
        updateTime: { type: string, format: date-time }

paths:
  /api/roles:
    get:
      summary: 分页查询角色
      parameters:
        - name: page; in: query; schema: { type: integer }
        - name: size; in: query; schema: { type: integer }
      responses:
        "200": { description: OK }
    post:
      summary: 新增角色
      requestBody:
        content:
          application/json:
            schema: { $ref: '#/components/schemas/SysRoleDTO' }
      responses:
        "200": { description: OK }
  /api/roles/{id}:
    get:
      summary: 按 ID 查询角色
      parameters:
        - name: id; in: path; required: true; schema: { type: integer }
      responses:
        "200": { description: OK }
    put:
      summary: 更新角色
      parameters:
        - name: id; in: path; required: true; schema: { type: integer }
      requestBody:
        content:
          application/json:
            schema: { $ref: '#/components/schemas/SysRoleDTO' }
      responses:
        "200": { description: OK }
    delete:
      summary: 删除角色
      parameters:
        - name: id; in: path; required: true; schema: { type: integer }
      responses:
        "200": { description: OK }
components:
  schemas:
    SysMenuDTO:
      type: object
      required: [name, path, parentId]
      properties:
        name:      { type: string }
        path:      { type: string }
        component: { type: string }
        parentId:  { type: integer, format: int64 }
        orderNum:  { type: integer }
        status:    { type: integer }
    SysMenuVO:
      type: object
      properties:
        id:         { type: integer, format: int64 }
        name:       { type: string }
        path:       { type: string }
        component:  { type: string }
        parentId:   { type: integer, format: int64 }
        orderNum:   { type: integer }
        status:     { type: integer }
        createTime: { type: string, format: date-time }
        updateTime: { type: string, format: date-time }

paths:
  /api/menus:
    get:
      summary: 分页查询菜单
      parameters:
        - name: page; in: query; schema: { type: integer }
        - name: size; in: query; schema: { type: integer }
      responses:
        "200": { description: OK }
    post:
      summary: 新增菜单
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SysMenuDTO'
      responses:
        "200": { description: OK }
  /api/menus/{id}:
    get:
      summary: 查询单个菜单
      parameters:
        - name: id; in: path; required: true; schema: { type: integer }
      responses:
        "200": { description: OK }
    put:
      summary: 更新菜单
      parameters:
        - name: id; in: path; required: true; schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SysMenuDTO'
      responses:
        "200": { description: OK }
    delete:
      summary: 删除菜单
      parameters:
        - name: id; in: path; required: true; schema: { type: integer }
      responses:
        "200": { description: OK }
paths:
  /api/permissions/user/{userId}/roles:
    get:
      summary: 获取用户已分配角色ID列表
      parameters:
        - name: userId; in: path; required: true; schema: { type: integer }
      responses:
        "200": { description: OK; content: { application/json: { schema: { type: array, items: { type: integer } } } } }
    post:
      summary: 为用户分配角色
      parameters:
        - name: userId; in: path; required: true; schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items: { type: integer }
      responses:
        "200": { description: OK }

  /api/permissions/role/{roleId}/menus:
    get:
      summary: 获取角色已分配菜单ID列表
      parameters:
        - name: roleId; in: path; required: true; schema: { type: integer }
      responses:
        "200": { description: OK; content: { application/json: { schema: { type: array, items: { type: integer } } } } }
    post:
      summary: 为角色分配菜单
      parameters:
        - name: roleId; in: path; required: true; schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items: { type: integer }
      responses:
        "200": { description: OK }
components:
  schemas:
    SysPermissionDTO: { type: object, required:[code,name,menuId,apiPath,method],
                        properties:
                          code:{type:string}, name:{type:string},
      menuId:{type:integer,format:int64},
      apiPath:{type:string}, method:{type:string},
      status:{type:integer} }

    SysPermissionVO: { type: object,
                       properties:
                         id:{type:integer,format:int64},
                       code:{type:string}, name:{type:string},
                       menuId:{type:integer,format:int64},
                       apiPath:{type:string}, method:{type:string},
                       status:{type:integer},
                       createTime:{type:string,format:date-time},
                       updateTime:{type:string,format:date-time} }

paths:
  /api/permissions/user/{userId}/roles:
    get: { summary: 获取用户角色IDs }
    post:{ summary: 设置用户角色IDs }
  /api/permissions/role/{roleId}/menus:
    get: { summary: 获取角色菜单IDs }
    post:{ summary: 设置角色菜单IDs }
  /api/permissions:
    get: { summary: 分页查询权限 }
    post:{ summary: 创建权限 }
  /api/permissions/{id}:
    get:    { summary: 查询单个权限 }
    put:    { summary: 更新权限 }
    delete: { summary: 删除权限 }
  /api/permissions/role/{roleId}:
    get: { summary: 获取角色权限IDs }
    post:{ summary: 设置角色权限IDs }
paths:
  /api/schedule:
    get:
      summary: 分页查询排班
      parameters:
        - in: query; name: page; schema: {type: integer}
        - in: query; name: size; schema: {type: integer}
        - in: query; name: userId; schema: {type: integer}
      responses: { '200': { description: OK } }
    post:
      summary: 新增排班
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/ScheduleDTO' }
      responses: { '200': { description: OK } }
    put:
      summary: 更新排班
      parameters:
        - in: path; name: id; schema: {type: integer}
      requestBody:
        content:
          application/json:
            schema: { $ref: '#/components/schemas/ScheduleDTO' }
      responses: { '200': { description: OK } }
    delete:
      summary: 删除排班
      parameters:
        - in: path; name: id; schema: {type: integer}
      responses: { '200': { description: OK } }

  /api/correction:
    get:
      summary: 分页查询补卡申请
      parameters:
        - in: query; name: page; schema: {type: integer}
        - in: query; name: size; schema: {type: integer}
        - in: query; name: userId; schema: {type: integer}
      responses: { '200': { description: OK } }
    post:
      summary: 申请补卡
      requestBody:
        content:
          application/json:
            schema: { $ref: '#/components/schemas/CorrectionDTO' }
      responses: { '200': { description: OK } }
  /api/correction/{id}/approve:
    post:
      summary: 审批补卡申请
      parameters:
        - in: path; name: id; schema: {type: integer}
        - in: query; name: approverId; schema: {type: integer}
        - in: query; name: pass; schema: {type: boolean}
      responses: { '200': { description: OK } }

components:
  schemas:
    ScheduleDTO:
      type: object
      required: [userId,workDate,shiftCode,startTime,endTime]
      properties:
        userId:    { type: integer }
        workDate:  { type: string, format: date }
        shiftCode: { type: string }
        startTime: { type: string, format: time }
        endTime:   { type: string, format: time }
        description:{ type: string }
    CorrectionDTO:
      type: object
      required: [userId,applyDate,type,reason]
      properties:
        userId:    { type: integer }
        applyDate: { type: string, format: date }
        type:      { type: integer, description: '1上班卡；2下班卡' }
        reason:    { type: string }

